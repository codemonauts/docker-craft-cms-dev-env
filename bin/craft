#!/bin/bash

MYSQL_CONTAINER="mysql:5.6"
CRAFT_CONTAINER="codemonauts/craft-cms-dev-env"

if [ ! -e ${HOME}/databases ]; then
  mkdir ${HOME}/databases
fi

if [ ! -e ${HOME}/database_config ]; then
  mkdir ${HOME}/database_config
fi



case "$1" in

  'start')
    docker pull "$MYSQL_CONTAINER"
    docker run --rm -d --name mysql -p 3306:3306 -v "${HOME}/databases:/var/lib/mysql" -v "${HOME}/database_config:/etc/mysql/conf.d" -e MYSQL_ROOT_PASSWORD=root "$MYSQL_CONTAINER"
    if [ $? == 0 ]; then
      docker pull "$CRAFT_CONTAINER"
      PHPVERSION=$2
      if [ -z $PHPVERSION ]; then
          PHPVERSION="7.0"
      fi 
      docker run --rm -d --name craft -p 8080:80 -v "${PWD}:/local" -e "PHPVERSION=$PHPVERSION" --link mysql:mysql "$CRAFT_CONTAINER"
      if [ $? == 0 ]; then
        echo "Started Craft CMS environment in ${PWD} and databases stored to ${HOME}/databases."
      else
        echo "Error starting webserver container. See error messages above!"
      fi
    else
      echo "Error starting MySQL container. See error messages above!"
    fi
    ;;

  'stop')
    docker stop craft
    docker exec mysql /etc/init.d/mysql stop
    docker stop mysql
    ;;

  'restart')
    $0 stop
    $0 start
    ;;

  'yiic')
    echo "${@:2}"
    docker exec craft /bin/bash -c "/local/craft/app/etc/console/yiic ${@:2}"
    ;; 

  'shell')
    docker exec -it craft /bin/bash
    ;; 

  'create')
    docker exec craft /bin/bash -c "mysqladmin create ${2}"
    ;;

  'drop')
    docker exec -it craft /bin/bash -c "mysqladmin drop ${2}"
    ;;

  'import')
    docker exec -it craft /bin/bash -c "mysql ${2} < /local/${3}"
    ;;

  'compile')
    docker exec -it craft /bin/bash -c "compile.sh"
    docker exec -it craft /bin/bash -c "watch.sh"
    ;;

  'gulp')
    docker exec -it craft /bin/bash -c "gulp.sh"
    ;;

  'tunnel')
    docker exec -it craft /bin/bash -c "ngrok http 80"
    ;;

esac
